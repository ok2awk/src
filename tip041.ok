# /* vim: set filetype=awk ts=2 sw=2 sts=2 et : */

"""

## Tip04ok: Test Suite

"""


@include "oklib"
@include "xx"



A lot of my tricks are embodied in `ok2awk`, a
pre-processor that adds some useful functionality
to raw AWK.

### Files

`Ok2awk` pulls apart `*.ok` files to generate:

- A documentation file `*.md`.  This documentation is pulled from  markdown
  comments found in multi-line strings that start and 
  end with triple double-quotes `===`.
- A code file *.awk`.  For these code files, `Ok` comments out those 
  multi-line strings (by prefixing all those lines with `#`).

```
           /---> xx.md  
xx.ok --->/
          \
           \---> xx.awk
```

The command line for calling `ok` on `xx.ok` is

``
./ok xx

```

As a side-effect of calling `ok`, any changes in the `*.ok`
files in the local directory are updated into
`*.md` and `*.awk` files.


### Configuration

Optionally, `ok` is configured by an `ok.rc` file that
defines where all these files are written to:

```
Awk=_var/awk # where to keep the generated awk files
Tmp=_var/tmp # where to write temporaroes
Docs=docs    # where to write the generated markdown files

MyName="'Tim Menzies'"
MyEmail="'tim@menzies.us'"

```

### Installation

A minimal install of `ok2awk` are the files `ok`, `ok.rc` and a library
of standard functions `ok.ok`.

"""


