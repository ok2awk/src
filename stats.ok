# /* vim: set filetype=awk ts=2 sw=2 sts=2  : */
BEGIN {
  OK.tips.author  = "Omar Khayyam"
  OK.tips.email   = "omar@khayyam__persia"
  OK.tips.version = "0.1"
  OK.tips.license = "opensource__org/licenses/BSD-3-Clause"
  OK.tips.more    = "ok2awk__github__io/info/stats"
}

"""

## About Stats

"""

@include "oklib"

function Hist(i,lo,hi,bins) {
	has(i,"_data")
	i.bins  = bins
  i.lo    = lo
  i.hi    = hi
	i.fmt   = "%8.1f : %s"
	i.char  = "*"
	i._maxb = 0
	i.max   = 50
}
function Hist1(i,x,    b,n) {
	if(x == i.hi)
	  x -= 1e-32
	b = int(i.bins*(x - i.lo)/(i.hi - i.lo + 1e-32))
	n = ++i._data[b]
	if (n >  i._maxb)
	  i._maxb=n
}
function Histshow(i,   scale,gap,b,n,show) {
	scale = i._maxb > i.max ? i.max/i._maxb : 1
	gap = (i.hi - i.lo)/i.bins
	for(b=0; b< i.bins; b++) { 
		n = i._data[b]
		show = n > 0 ? n : ""
    printf(i.fmt " " show "\n", 
					 i.lo + b*gap,
					 chars(n * scale, i.char))
}}
function Normal(i, mu,sd) {
	i.mu= mu == "" ? 0 : mu
	i.sd= sd == "" ? 1 : sd
}
function Normal1(i) {
  return i.mu + i.sd * NormalZ()
}
function NormalZ(i,      w,x1,x2) {
  w=1;
  while (w >= 1) {
    x1= 2.0 * rand() - 1
    x2= 2.0 * rand() - 1
    w = x1*x1 + x2*x2
  };
  w = sqrt((-2.0 * log(w))/w)
  return x1 * w;
}
function beta10() { return 1 - beta90() }
function beta20() { return 1 - beta80() }
function beta25() { return 1 - beta75() }
function beta33() { return 1 - beta67() }
function beta40() { return 1 - beta60() }
function beta50() { return rand()       }
function beta60() { return rand()^0.67  }
function beta67() { return rand()^0.5   }
function beta75() { return rand()^0.33  }
function beta80() { return rand()^0.25  }
function beta90() { return rand()^(1/9) }

function normal(mu,sd,i) {
	Normal(i,mu,sd)
	return Nomral1(i)
}
function any(all) {
	return all[ int(length(all)*rand()) + 1 ] 
}
function dist3(all,   x,y,z) {
	x= any(all)
	y= any(all)
	z= any(all)
	return x + (z - y)
}
function triangle(a,c,b,   u) {
	u = rand()
	if (u < (c-a)/(b-a))
		return a + (    u*(b-a)*(c-a))^0.5
	else
		return b - ((1-u)*(b-a)*(b-c))^0.5
}
