# /* vim: set filetype=awk ts=2 sw=2 sts=2 et : */
BEGIN {
  OK.tips.author  = "'Tim Menzies'"
  OK.tips.email   = "tim@menzies__us"
  OK.tips.version = "0__1"
  OK.tips.license = "'opensource__org/licenses/BSD-3-Clause"
  OK.tips.more    = "ok2awk__github__io/src/divobj"
}
"""

## About Divobj

"""

@include "ok"
@include "csv"

function Node(i) { 
  i.n  = i.mu = i.m2 = i.sd = 0 
  i.lo =  1e32
  i.hi = -1e32
  has(i,"left")
  has(i,"right")
  has(i,"all")
}
function Node1(i,v,          delta) {
  v     = v+0
  if (v < i.lo) i.lo = v
  if (v > i.hi) i.hi = v
  i.n  += 1
  i.all[i.n] = v
  delta = v - i.mu
  i.mu += delta/i.n
  i.m2 += delta*(v-i.mu)
  if (i.n > 1)
	  i.sd = (i.m2/(i.n-1))^0.5
  return v
}
function Nodes(i,  lvl, q){
  q=", "
  print(lvl "[" i.lo q i.hi q i.n q i.sd "]")
  if (length(i.left))
    Nodes(i.left,lvl "|  ")
  if (length(i.right))
    Nodes(i.right,lvl "|  ")
}
function Div(i) {
  i.cohen  = 0.2
  i.size   = 0.5
  i.min    = 20
  i.epsilon= 0
  have(i,"root","Node")
}
function Div1(i,lst1,    lst2,j,n) {
  n=asort(lst1,lst2)
  for(j=1;j<=n;j++)
    Node1(i.root, lst2[j])
  i.epsilon = i.root.sd*i.cohen
  i.min     = length(lst2)**i.size
  DivRecurse(i, i.root)
}
function DivRecurse(i, t,     mid,z,e,n,j,sd) {
  z = 0.0000001
  n = length(t.all) 
  if (n < i.min)        
    return
  if (t.all[n] - t.all[1] < i.epsilon) 
    return
  Node(t.left)
  Node(t.right) 
  while(j < n/2)
    Node1(t.left,  t.all[++j])
  while(j < n)
    Node1(t.right, t.all[++j])
  if ( t.right.mu -  t.left.mu >= i.epsilon) {
    sd = t.left.n/n*t.left.sd + t.right.n/n*t.right.sd
    if (sd < t.sd) {
      DivRecurse(i, t.left)
      DivRecurse(i, t.right)
      return
  }}
  empty(t.left)
  empty(t.right)
}
