# /* vim: set filetype=awk ts=2 sw=2 sts=2  : */
BEGIN {
  OK.rx.author  = "Tim Menzies"
  OK.rx.email   = "tim@menzies__us"
  OK.rx.version = "0.1"
  OK.rx.license = "opensource__org/licenses/BSD-3-Clause"
  OK.rx.more    = "ok2awk__github__io/tiles"
}

"""

## About Tiles

"""

@include "oklib"

function Rx(i,txt,fours) {
	i.txt   = either(txt, "rx" int(1000*rand()))
	i.n     = fours ? 4 : 5
	i.width = 50
	i.txt   = txt
	i.f     = "%5.2f"
	i.report= ""
	i.lo = i.hi = 0
	has(i, "string")
	has(i, "data")
	has(i, "breaks")
}

function Rx1(i,all,        m,q,k) {
	for(k=1; k<=i.width; k++) 
		i.string[k] = " "
	copy(all, i.data)
	m    = asort(i.data)
	i.lo = i.data[1]
	i.hi = i.data[m]
	q    = int(m/i.n)
	for(k=1; k<=i.n; k++) 
		i.breaks[k] = i.data[k*q] 
	i.breaks[k+1] = i.hi
	i.breaks[0]   = i.lo
	i.median = fours ? i.breaks[2] : i.breaks[3]
	i.rank = 1
}
function rxsShow(rxs,order,    j,k,n,lo,hi) {
	order = either(order, "medianSortUp")
	lo =  1e31
	hi = -1e31
	for(j in rxs) {
		if (rxs[j].lo < lo) lo = rxs[j].lo
		if (rxs[j].hi > hi) hi = rxs[j].hi
	}
	for(j in rxs)
		RxReport(rxs[j],lo,hi) 
	n= asort(rxs,rxs,oder)
	rank=1
	pushes(last,rxs[1].all)
	for(j=2;j<=n;j++) {
		if (! cliffsDelta(last,rxs[j].all)) {
			rank++
			empty(last)
	  }
		pushes(last,rxs[j].all)
	  rxs[j].rank = rank
		printf("%3s | %s  %s\n",
					 rxs[j].rank,
					 rxs[j].report,
					 RxNums(rxs[j])
	}
}
function RxNums(i,   s,k) {
	s = sprintf(i.f ", ", i.breaks[0])
	for(k=1; k<=i.n; k++)
		s = sprintf(s i.f ", ", i.breaks[k])
	return s 
}
function RxReport(i,lo,hi,   k) {
	lo = either(lo, i.lo)
	hi = either(hi, i.hi)
  i.string[ int(i.width/2) ] = "|"	  
  if (i.n == 5) { 
		RxMark(i,1,2,lo,hi,"-")
		RxMark(i,4,5,lo,hi,"-") 
		RxMark(i,3,3,lo,hi,"*")
	} else {
		RxMark(i,1,3,lo,hi,"-");
		RxMark(i,2,2,lo,hi,"*")
	}
	for(k=1; k<=i.width; k++) 
		i.report = i.report i.string[k]
	i.report = "|" i.report "|"
	return i.report
}
function RxMark(i,x,y,lo,hi,q) {
	x= i.breaks[x]
	y= i.breaks[y]
	x= int(i.width*(x-lo)/(hi - lo + 1e-32))
	y= int(i.width*(y-lo)/(hi - lo + 1e-32))
  while(x <= y)
		i.string[x++] = q
}
